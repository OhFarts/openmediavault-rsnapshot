<?php
/**
 * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
 * @author    Julian Kalinowski <julakali@gmail.com>
 * @copyright Copyright (c) 2013-2014 Julian Kalinowski
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
require_once("openmediavault/module.inc");
require_once("openmediavault/config.inc");
require_once("openmediavault/error.inc");

class OMVModuleRSnapshot extends OMVModuleServiceAbstract
  implements OMVINotifyListener {
    /**
     * Get the module name.
     */
    public function getName() {
        return "rsnapshot";
    }

    /**
     * Generate the configuration.
     * @throw E_EXEC_FAILED
     */
    public function applyConfig() {
        $cmd = "omv-mkconf rsnapshot 2>&1";
        if(0 !== $this->exec($cmd, $output)) {
            throw new OMVException(OMVErrorMsg::E_EXEC_FAILED,
              $cmd, implode("\n", $output));
        }
    }

    /**
     * Helper function to find out whether the given shared folder
     * configuration object is used. If it is used, then mark the
     * module as dirty.
     * @param type The event message type.
     * @param path The event message path.
     * @param object The configuration object.
     */
    final public function onSharedFolder($type, $path, $object) {
        global $xmlConfig;
        $xpath = sprintf("//services/rsnapshot/jobs/job[sourcefolderref='%s']",
          $object['uuid']);
        if(TRUE === $xmlConfig->exists($xpath))
            $this->setDirty();
        $xpath = sprintf("//services/rsnapshot/jobs/job[targetfolderref='%s']",
          $object['uuid']);
        if(TRUE === $xmlConfig->exists($xpath))
            $this->setDirty();
    }

    /**
     * Bind listeners.
     */
    function bindListeners(OMVNotifyDispatcher $dispatcher) {
        $dispatcher->addListener(
          OMV_NOTIFY_CREATE | OMV_NOTIFY_MODIFY | OMV_NOTIFY_DELETE,
          "org.openmediavault.services.rsnapshot.jobs.job",
          array($this, "setDirty"));
        $dispatcher->addListener(
          OMV_NOTIFY_MODIFY,
          "org.openmediavault.system.shares.sharedfolder",
          array($this, "onSharedFolder"));
    }
}

// Register module.
$moduleMgr = &OMVModuleMgr::getInstance();
$moduleMgr->registerModule(new OMVModuleRSnapshot());

// Register new logfile type
// log format: [06/Dec/2013:19:18:57]  :(
OMVLogFile::registerType("rsnapshot", array(
    "filename" => "rsnapshot.log",
    "filepath" => "/var/log/rsnapshot.log",
    "regex"    => "/^\[(\d+\/\w+\/\d+:\d+:\d+:\d+)\]\s+(.*)$/",
    "columns"  => array(
        "date"    => array(
            "index" => 1,
            "func"  => create_function('$v', 'return strtotime(preg_replace("/(\d{4})\:/","$1 ", preg_replace("/[\/]/"," ", $v)));')
        ),
        "message" => 2
    )
));
?>
